# Generated by Django 5.2.1 on 2025-07-07 15:43

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('course', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='banners/', verbose_name='轮播图')),
                ('to_id', models.IntegerField(blank=True, null=True, verbose_name='跳转ID')),
                ('sort_number', models.IntegerField(default=999, verbose_name='序号')),
            ],
            options={
                'verbose_name': '轮播图',
                'verbose_name_plural': '轮播图管理',
            },
        ),
        migrations.CreateModel(
            name='VipProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vip_type', models.CharField(choices=[('year', '包年VIP'), ('forever', '永久VIP')], default='year', max_length=10, verbose_name='VIP类型')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='价格')),
                ('duration_days', models.IntegerField(blank=True, null=True, verbose_name='有效天数')),
            ],
            options={
                'verbose_name': 'VIP产品',
                'verbose_name_plural': 'VIP产品管理',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='账号')),
                ('password', models.CharField(max_length=50, verbose_name='密码')),
                ('nickname', models.CharField(blank=True, max_length=30, null=True, verbose_name='昵称')),
                ('real_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='真实姓名')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机号')),
                ('remark', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('avatar', models.ImageField(default='avatars/default.jpg', upload_to='avatars/', verbose_name='头像')),
                ('register_time', models.DateTimeField(auto_now_add=True, verbose_name='注册时间')),
                ('last_active_time', models.DateTimeField(auto_now=True, verbose_name='最新活动时间')),
                ('is_vip', models.BooleanField(default=False, verbose_name='是否VIP')),
                ('vip_expire_time', models.DateTimeField(blank=True, null=True, verbose_name='VIP到期时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('vip_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.vipproduct', verbose_name='VIP产品')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户管理',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_time', models.DateTimeField(auto_now_add=True, verbose_name='发放时间')),
                ('download_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='证书下载地址')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course', verbose_name='课程')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '证书',
                'verbose_name_plural': '证书管理',
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=5, verbose_name='评分')),
                ('content', models.TextField(blank=True, null=True, verbose_name='评价内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='评价时间')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course', verbose_name='课程')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '评价',
                'verbose_name_plural': '评价管理',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='内容')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='联系电话')),
                ('status', models.IntegerField(choices=[(1, '已回复'), (2, '待回复')], default=2, verbose_name='是否回复')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '反馈',
                'verbose_name_plural': '反馈管理',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='消息内容')),
                ('type', models.CharField(choices=[('system', '系统'), ('order', '订单'), ('course', '课程'), ('feedback', '反馈')], max_length=20, verbose_name='消息类型')),
                ('is_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户消息',
                'verbose_name_plural': '用户消息管理',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('course', '课程订单'), ('vip', 'VIP订单')], default='course', max_length=10, verbose_name='订单类型')),
                ('status', models.CharField(choices=[('unpaid', '未支付'), ('paid', '已支付'), ('cancelled', '已取消')], default='unpaid', max_length=20, verbose_name='订单状态')),
                ('pay_type', models.CharField(choices=[('wechat', '微信'), ('alipay', '支付宝'), ('other', '其他')], default='qrcode', max_length=20, verbose_name='支付方式')),
                ('pay_serial_no', models.CharField(blank=True, max_length=128, null=True, verbose_name='支付流水号')),
                ('pay_time', models.DateTimeField(blank=True, null=True, verbose_name='支付时间')),
                ('order_no', models.CharField(max_length=64, unique=True, verbose_name='订单号')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='金额')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('pay_remark', models.CharField(blank=True, max_length=255, null=True, verbose_name='支付备注')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='course.course', verbose_name='课程')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单管理',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=64, unique=True, verbose_name='发票号')),
                ('status', models.CharField(default='pending', max_length=20, verbose_name='发票状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.order', verbose_name='订单')),
            ],
            options={
                'verbose_name': '发票',
                'verbose_name_plural': '发票管理',
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.FloatField(default=0, verbose_name='进度(百分比)')),
                ('last_view_time', models.DateTimeField(auto_now=True, verbose_name='最近学习时间')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course', verbose_name='课程')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='course.lesson', verbose_name='课时')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '学习进度',
                'verbose_name_plural': '学习进度管理',
            },
        ),
    ]
